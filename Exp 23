#include <stdio.h>
#define INF 9999
#define V 5

int minDistance(int dist[], int visited[]) {
    int min = INF, index;
    for (int v = 0; v < V; v++)
        if (!visited[v] && dist[v] <= min)
            min = dist[v], index = v;
    return index;
}

void dijkstra(int graph[V][V], int src) {
    int dist[V], visited[V] = {0};
    for (int i = 0; i < V; i++) dist[i] = INF;
    dist[src] = 0;

    for (int count = 0; count < V - 1; count++) {
        int u = minDistance(dist, visited);
        visited[u] = 1;
        for (int v = 0; v < V; v++)
            if (!visited[v] && graph[u][v] && dist[u] + graph[u][v] < dist[v])
                dist[v] = dist[u] + graph[u][v];
    }

    printf("Vertex \tDistance from Source\n");
    for (int i = 0; i < V; i++)
        printf("%d \t%d\n", i, dist[i]);
}

int main() {
    int graph[V][V] = {
        {0, 9, 6, 0, 0},
        {9, 0, 0, 5, 1},
        {6, 0, 0, 2, 2},
        {0, 5, 2, 0, 7},
        {0, 1, 2, 7, 0}
    };
    dijkstra(graph, 0);
    return 0;
}
